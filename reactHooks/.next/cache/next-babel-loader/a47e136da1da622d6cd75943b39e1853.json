{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david.jolliffe\\\\Desktop\\\\react-dev\\\\reactHooks\\\\components\\\\ImageToggleOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from \"react\";\n\nvar ImageToggleOnMouseScroll = function ImageToggleOnMouseScroll(_ref) {\n  var primaryImg = _ref.primaryImg,\n      secondaryImg = _ref.secondaryImg;\n  var myRef = useRef(null);\n  useEffect(function () {\n    window.addEventListener(\"scroll\", scrollHandler);\n    return function () {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  });\n\n  var _useState = useState(false),\n      inView = _useState[0],\n      setInView = _useState[1];\n\n  var isInView = function isInView() {\n    if (imageRef.current) {\n      var rect = myRef.current.getBoundingClientRect();\n      return rect.topo >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    return false;\n  };\n\n  var scrollHander = function scrollHander() {\n    setInView(function () {\n      return isInView();\n    });\n  };\n\n  return __jsx(\"img\", {\n    src: inView ? secondaryImg : primaryImag,\n    alt: \"\",\n    ref: myRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};\n\nexport default ImageToggleOnMouseScroll;","map":{"version":3,"sources":["C:\\Users\\david.jolliffe\\Desktop\\react-dev\\reactHooks\\components\\ImageToggleOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageToggleOnMouseScroll","primaryImg","secondaryImg","myRef","window","addEventListener","scrollHandler","removeEventListener","inView","setInView","isInView","imageRef","current","rect","getBoundingClientRect","topo","bottom","innerHeight","scrollHander","primaryImag"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,OAAiC;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAC9D,MAAMC,KAAK,GAAGN,MAAM,CAAC,IAAD,CAApB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,WAAQ,YAAM;AACVF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,aAArC;AACH,KAFD;AAGH,GALQ,CAAT;;AAH8D,kBAUlCP,QAAQ,CAAC,KAAD,CAV0B;AAAA,MAUvDS,MAVuD;AAAA,MAU/CC,SAV+C;;AAY9D,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,QAAIC,QAAQ,CAACC,OAAb,EAAsB;AAClB,UAAMC,IAAI,GAAGV,KAAK,CAACS,OAAN,CAAcE,qBAAd,EAAb;AACA,aAAOD,IAAI,CAACE,IAAL,IAAY,CAAZ,IAAiBF,IAAI,CAACG,MAAL,IAAeZ,MAAM,CAACa,WAA9C;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAQA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBT,IAAAA,SAAS,CAAC,YAAM;AACZ,aAAOC,QAAQ,EAAf;AACH,KAFQ,CAAT;AAGH,GAJD;;AAMA,SAEI;AAAK,IAAA,GAAG,EAAEF,MAAM,GAAGN,YAAH,GAAkBiB,WAAlC;AAA+C,IAAA,GAAG,EAAC,EAAnD;AAAsD,IAAA,GAAG,EAAEhB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAKH,CA/BD;;AAiCA,eAAeH,wBAAf","sourcesContent":["import React, {useRef, useEffect, useState} from \"react\";\r\n\r\nconst ImageToggleOnMouseScroll = ({primaryImg, secondaryImg }) => {\r\n    const myRef = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler);\r\n        return (() => {\r\n            window.removeEventListener(\"scroll\", scrollHandler);\r\n        }); \r\n    })\r\n    \r\n    const [inView, setInView] = useState(false);\r\n    \r\n    const isInView = () => {\r\n        if (imageRef.current) {\r\n            const rect = myRef.current.getBoundingClientRect();\r\n            return rect.topo >=0 && rect.bottom <= window.innerHeight;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    const scrollHander = () => {\r\n        setInView(() => {\r\n            return isInView();\r\n        });\r\n    };\r\n    \r\n    return (\r\n       \r\n        <img src={inView ? secondaryImg : primaryImag} alt=\"\" ref={myRef} />\r\n       \r\n    );\r\n};\r\n\r\nexport default ImageToggleOnMouseScroll;"]},"metadata":{},"sourceType":"module"}