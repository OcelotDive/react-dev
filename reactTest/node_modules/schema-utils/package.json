{
  "_args": [
    [
      {
        "raw": "schema-utils@^2.0.0",
        "scope": null,
        "escapedName": "schema-utils",
        "name": "schema-utils",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\david.jolliffe\\Desktop\\hello-next\\node_modules\\css-loader"
    ]
  ],
  "_from": "schema-utils@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "schema-utils@2.4.1",
  "_location": "/schema-utils",
  "_nodeVersion": "10.15.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/schema-utils_2.4.1_1569583505137_0.7742291363655027"
  },
  "_npmUser": {
    "name": "evilebottnawi",
    "email": "sheo13666q@gmail.com"
  },
  "_npmVersion": "6.11.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "schema-utils@^2.0.0",
    "scope": null,
    "escapedName": "schema-utils",
    "name": "schema-utils",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/css-loader",
    "/file-loader",
    "/style-loader"
  ],
  "_resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.4.1.tgz",
  "_shasum": "e89ade5d056dc8bcaca377574bb4a9c4e1b8be56",
  "_shrinkwrap": null,
  "_spec": "schema-utils@^2.0.0",
  "_where": "C:\\Users\\david.jolliffe\\Desktop\\hello-next\\node_modules\\css-loader",
  "author": {
    "name": "webpack Contrib",
    "url": "https://github.com/webpack-contrib"
  },
  "bugs": {
    "url": "https://github.com/webpack/schema-utils/issues"
  },
  "dependencies": {
    "ajv": "^6.10.2",
    "ajv-keywords": "^3.4.1"
  },
  "description": "webpack Validation Utils",
  "devDependencies": {
    "@babel/cli": "^7.6.2",
    "@babel/core": "^7.6.2",
    "@babel/preset-env": "^7.6.2",
    "@commitlint/cli": "^8.2.0",
    "@commitlint/config-conventional": "^8.2.0",
    "@types/json-schema": "^7.0.3",
    "@webpack-contrib/defaults": "^5.0.2",
    "@webpack-contrib/eslint-config-webpack": "^3.0.0",
    "babel-jest": "^24.9.0",
    "commitlint-azure-pipelines-cli": "^1.0.2",
    "cross-env": "^6.0.0",
    "del": "^5.1.0",
    "del-cli": "^3.0.0",
    "eslint": "^6.4.0",
    "eslint-config-prettier": "^6.3.0",
    "eslint-plugin-import": "^2.18.2",
    "husky": "^3.0.5",
    "jest": "^24.9.0",
    "jest-junit": "^8.0.0",
    "lint-staged": "^9.4.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^1.18.2",
    "standard-version": "^7.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-RqYLpkPZX5Oc3fw/kHHHyP56fg5Y+XBpIpV8nCg0znIALfq3OH+Ea9Hfeac9BAMwG5IICltiZ0vxFvJQONfA5w==",
    "shasum": "e89ade5d056dc8bcaca377574bb4a9c4e1b8be56",
    "tarball": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.4.1.tgz",
    "fileCount": 9,
    "unpackedSize": 46006,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdjfGSCRA9TVsSAnZWagAAc98P/in/vMgQR0nHyjU8zA9R\nTQCZa7TGQ9NeUzfEKJlMW0+Xac0cKsXf72tXRVpgvXMviAaw5ueGSaVmlq+o\nmryGJOgA/Tai51qd9bSNFkX4jY348mKglMLfYRI4g+q87qnO0NbJPmQ7Sq2L\nl4TwDDXD9UpGZfP+ifwGyDLZoQfhYSlFvXAT9XOf0Ie7hTFUsZ+cSLXHro8/\ngOa5VPQ0sMzfwDkTebi6AIsNnZrdG//PoByqeXOrMLdAmHlCjK/5EXhj+Y8B\nAVA6i+7AWW/ic9mf7g8IDXOq3dEFQ6NK1pAczK+W6xJd5FUoh78tBqME39qX\n1z/wJY7Aar4y789LJ1dzPyPKPoMqWNjJ4vHeRLaLexJGfV8jpFNs1Uh9iWxO\nh5MyuXVIdvQItg0PEW9iTpnlMHNo69FctOV9z1rAWHARRjQhUA7EMRlZTsIE\ncmpjg02M4BbSlB8hrknlvOIhTU6+6lRdJX4INirEslSGz+NETkjEU+ulTZJ5\nS/JLMpUVSh46nwR1X51efw8pUjeVnY89YEhyvRs0TdBtigiBiCYpJEgT2Lp7\nFvyRCyndaZQjCTAtVuuCagH+VxY8T9wnGat3ctcn0T6TyxsL3O2xhEjTIfll\nZe9/3stDL34R4Acy8lBmJ/4uS0bOPrgwi9L21KZFUX+X57g/8wQF9FJXN5EO\ndg/2\r\n=POmY\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 8.9.0"
  },
  "files": [
    "dist",
    "index.d.ts"
  ],
  "gitHead": "338db8b732aeb247db012b4bfae2fddf17d3e57e",
  "homepage": "https://github.com/webpack/schema-utils",
  "keywords": [
    "webpack"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "evilebottnawi",
      "email": "sheo13666q@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    }
  ],
  "name": "schema-utils",
  "optionalDependencies": {},
  "readme": "<div align=\"center\">\n  <a href=\"http://json-schema.org\">\n    <img width=\"160\" height=\"160\"\n      src=\"https://raw.githubusercontent.com/webpack-contrib/schema-utils/master/.github/assets/logo.png\">\n  </a>\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# schema-utils\n\nPackage for validate options in loaders and plugins.\n\n## Getting Started\n\nTo begin, you'll need to install `schema-utils`:\n\n```console\nnpm install schema-utils\n```\n\n## API\n\n**schema.json**\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"option\": {\n      \"type\": [\"boolean\"]\n    }\n  },\n  \"additionalProperties\": false\n}\n```\n\n```js\nimport schema from './path/to/schema.json';\nimport validate from 'schema-utils';\n\nconst options = { option: true };\nconst configuration = { name: 'Loader Name/Plugin Name/Name' };\n\nvalidate(schema, options, configuration);\n```\n\n### `schema`\n\nType: `String`\n\nJSON schema.\n\nSimple example of schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"description\": \"This is description of option.\",\n      \"type\": \"string\"\n    }\n  },\n  \"additionalProperties\": false\n}\n```\n\n### `options`\n\nType: `Object`\n\nObject with options.\n\n```js\nvalidate(\n  schema,\n  {\n    name: 123,\n  },\n  { name: 'MyPlugin' }\n);\n```\n\n### `configuration`\n\nAllow to configure validator.\n\n#### `name`\n\nType: `Object`\nDefault: `\"Object\"`\n\nAllow to setup name in validation errors.\n\n```js\nvalidate(schema, options, { name: 'MyPlugin' });\n```\n\n```shell\nInvalid configuration object. MyPlugin has been initialised using a configuration object that does not match the API schema.\n - configuration.optionName should be a integer.\n```\n\n#### `baseDataPath`\n\nType: `String`\nDefault: `\"configuration\"`\n\nAllow to setup base data path in validation errors.\n\n```js\nvalidate(schema, options, { name: 'MyPlugin', baseDataPath: 'options' });\n```\n\n```shell\nInvalid options object. MyPlugin has been initialised using an options object that does not match the API schema.\n - options.optionName should be a integer.\n```\n\n#### `postFormatter`\n\nType: `Function`\nDefault: `undefined`\n\nAllow to reformat errors.\n\n```js\nvalidate(schema, options, {\n  name: 'MyPlugin',\n  postFormatter: (formattedError, error) => {\n    if (error.keyword === 'type') {\n      return `${formattedError}\\nAdditional Information.`;\n    }\n\n    return formattedError;\n  },\n});\n```\n\n```shell\nInvalid options object. MyPlugin has been initialised using an options object that does not match the API schema.\n - options.optionName should be a integer.\n   Additional Information.\n```\n\n## Examples\n\n**schema.json**\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"test\": {\n      \"anyOf\": [\n        { \"type\": \"array\" },\n        { \"type\": \"string\" },\n        { \"instanceof\": \"RegExp\" }\n      ]\n    },\n    \"transform\": {\n      \"instanceof\": \"Function\"\n    },\n    \"sourceMap\": {\n      \"type\": \"boolean\"\n    }\n  },\n  \"additionalProperties\": false\n}\n```\n\n### `Loader`\n\n```js\nimport { getOptions } from 'loader-utils';\nimport validateOptions from 'schema-utils';\n\nimport schema from 'path/to/schema.json';\n\nfunction loader(src, map) {\n  const options = getOptions(this) || {};\n\n  validateOptions(schema, options, {\n    name: 'Loader Name',\n    baseDataPath: 'options',\n  });\n\n  // Code...\n}\n\nexport default loader;\n```\n\n### `Plugin`\n\n```js\nimport validateOptions from 'schema-utils';\n\nimport schema from 'path/to/schema.json';\n\nclass Plugin {\n  constructor(options) {\n    validateOptions(schema, options, {\n      name: 'Plugin Name',\n      baseDataPath: 'options',\n    });\n\n    this.options = options;\n  }\n\n  apply(compiler) {\n    // Code...\n  }\n}\n\nexport default Plugin;\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/schema-utils.svg\n[npm-url]: https://npmjs.com/package/schema-utils\n[node]: https://img.shields.io/node/v/schema-utils.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack/schema-utils.svg\n[deps-url]: https://david-dm.org/webpack/schema-utils\n[tests]: https://dev.azure.com/webpack/schema-utils/_apis/build/status/webpack.schema-utils?branchName=master\n[tests-url]: https://dev.azure.com/webpack/schema-utils/_build/latest?definitionId=9&branchName=master\n[cover]: https://codecov.io/gh/webpack/schema-utils/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack/schema-utils\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=schema-utils\n[size-url]: https://packagephobia.now.sh/result?p=schema-utils\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack/schema-utils.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production babel src -d dist --ignore \"src/**/*.test.js\" --copy-files",
    "clean": "del-cli dist",
    "commitlint": "commitlint --from=master",
    "defaults": "webpack-defaults",
    "lint": "npm-run-all -l -p \"lint:**\"",
    "lint:js": "eslint --cache src test",
    "lint:prettier": "prettier \"{**/*,*}.{js,json,md,yml,css}\" --list-different",
    "prebuild": "npm run clean",
    "prepare": "npm run build",
    "pretest": "npm run lint",
    "release": "standard-version",
    "security": "npm audit",
    "start": "npm run build -- -w",
    "test": "cross-env NODE_ENV=test npm run test:coverage",
    "test:coverage": "cross-env NODE_ENV=test jest --collectCoverageFrom=\"src/**/*.js\" --coverage",
    "test:only": "cross-env NODE_ENV=test jest",
    "test:watch": "cross-env NODE_ENV=test jest --watch"
  },
  "types": "index.d.ts",
  "version": "2.4.1"
}
